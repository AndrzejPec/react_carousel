{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","containerWidth","totalWidth","length","maxOffset","useState","currentOffset","setCurrentOffset","className","style","width","marginLeft","transition","map","image","index","src","alt","title","type","onClick","disabled","App","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQAYaA,EAA4B,SAAC,GAMnC,IALLC,EAKI,EALJA,OAKI,IAJJC,iBAII,MAJQ,IAIR,MAHJC,iBAGI,MAHQ,EAGR,MAFJC,YAEI,MAFG,EAEH,MADJC,yBACI,MADgB,IAChB,EAEEC,GAAkBJ,EADZ,IAC+BC,EACrCI,GAAcL,EAFR,IAE2BD,EAAOO,OACxCC,IAAcF,EAAaD,GAEjC,EAA0CI,mBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KASA,OAEE,cADA,CACA,OAAKC,UAAU,WAAWC,MAAO,CAAEC,MAAM,GAAD,OAAKT,EAAL,OAAxC,UACE,oBACEO,UAAU,iBACVC,MAAO,CACLC,MAAM,GAAD,OAAKR,EAAL,MACLS,WAAW,GAAD,OAAKL,EAAL,MACVM,WAAW,eAAD,OAAiBZ,EAAoB,IAArC,kBALd,SAQGJ,EAAOiB,KAAI,SAACC,EAAOC,GAAR,OACV,6BACE,qBACEC,IAAKF,EACLG,IAAG,gBAAWF,EAAQ,GACtBN,MAAO,CAAEC,MAAM,GAAD,OAAKb,EAAL,UAJTiB,QAUb,wBACEI,MAAM,aACNC,KAAK,SACLC,QAAS,WACHd,EAAgBF,GAjC1BG,EAAiBD,GAAiBT,EAPxB,IAO2CE,IAqCjDsB,SAAUf,GAAiBF,EAR7B,SAUG,aAEH,wBACE,UAAQ,OACRc,MAAM,aACNC,KAAK,SACLC,QAAS,WACHd,EAAgB,GA1C1BC,EAAiBD,GAAiBT,EAXxB,IAW2CE,IA8CjDsB,SAAUf,GAAiB,EAT7B,SAWG,iBCtEIgB,EAAb,4MACEC,MAAQ,CACN3B,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iBAZN,4CAgBE,WACE,IAAQA,EAAW4B,KAAKD,MAAhB3B,OAIR,OAEE,sBAAKY,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCZ,EAAOO,OAA1C,aACA,cAAC,EAAD,CACEJ,KAAM,EACNH,OAAQA,EACRE,UAVY,EAWZD,UAZY,IAaZG,kBAAmB,aA/B7B,GAAyByB,IAAMC,WCL/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.87b1d839.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/img-redundant-alt */\nimport React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  itemWidth = 130,\n  frameSize = 3,\n  step = 3,\n  animationDuration = 1000,\n}) => {\n  const gap = 25;\n  const containerWidth = (itemWidth + gap) * frameSize;\n  const totalWidth = (itemWidth + gap) * images.length;\n  const maxOffset = -(totalWidth - containerWidth);\n\n  const [currentOffset, setCurrentOffset] = useState(0);\n  const moveLeft = () => {\n    setCurrentOffset(currentOffset - (itemWidth + gap) * step);\n  };\n\n  const moveRight = () => {\n    setCurrentOffset(currentOffset + (itemWidth + gap) * step);\n  };\n\n  return (\n    // eslint-disable-next-line react/jsx-indent\n    <div className=\"Carousel\" style={{ width: `${containerWidth}px` }}>\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          width: `${totalWidth}px`,\n          marginLeft: `${currentOffset}px`,\n          transition: `margin-left ${animationDuration / 1000}s ease-in-out`,\n        }}\n      >\n        {images.map((image, index) => (\n          <li key={image}>\n            <img\n              src={image}\n              alt={`Image ${index + 1}`}\n              style={{ width: `${itemWidth}px` }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        title=\"prevButton\"\n        type=\"button\"\n        onClick={() => {\n          if (currentOffset > maxOffset) {\n            moveLeft();\n          }\n        }}\n        disabled={currentOffset <= maxOffset}\n      >\n        {' ← '}\n      </button>\n      <button\n        data-cy=\"next\"\n        title=\"nextButton\"\n        type=\"button\"\n        onClick={() => {\n          if (currentOffset < 0) {\n            moveRight();\n          }\n        }}\n        disabled={currentOffset >= 0}\n      >\n        {' → '}\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n    const itemWidth = 130;\n    const frameSize = 3;\n\n    return (\n\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n        <Carousel\n          step={3}\n          images={images}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={1000}\n          // infinite={false}\n        />\n      </div>\n\n    );\n  }\n}\n/* # React Carousel\n\n> [React + Typescript cheat sheet](https://mate-academy.github.io/fe-program/js/extra/react-typescript)\n\n1. implement a carousel described [here](https://github.com/mate-academy/dom_carousel) as a React component\n    ```jsx harmony\n    <Carousel images={['url1', 'url2']} />\n    ```\n2. add an ability to customize `itemWidth` with default value of `130px`\n3. add `frameSize` - number of images displayed at the same time with the default of `3`\n4. add `step` (default 3) - number of images scrolled per click\n5. add `animationDuration` (default `1000`) - time in ms to show the new portion of images\n6. (*) add an `infinite` prop (`false` by default) - to do the carousel cyclic\n    ```jsx harmony\n    <Carousel\n      images={['url1', 'url2']}\n      step={3}\n      frameSize={3}\n      itemWidth={130}\n      animationDuration={1000}\n      infinite={false}\n    />\n    ```\n\n## REQUIREMENTS:\n\n1. The title of the page should contain \"Carousel\"\n2. The page should contain inputs for:\n   - `itemWidth`\n   - `frameSize`\n   - `step`\n   - `fnimationDuration`\n3. Add data-cy attributes:\n   - `title` inside h1 tag\n   - `next` to the \"Next\" button\n\n## Instructions\n\n- Implement a solution following the [React task guideline](https://github.com/mate-academy/react_task-guideline#react-tasks-guideline).\n- Use the [React TypeScript cheat sheet](https://mate-academy.github.io/fe-program/js/extra/react-typescript).\n- Open one more terminal and run tests with `npm test` to ensure your solution is correct.\n- Replace `<your_account>` with your Github username in the [DEMO LINK](https://andrzejpec.github.io/react_carousel/) and add it to the PR description.\n*/\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}