{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","imageWidth","frameSize","step","animationDuration","infinite","containerWidth","totalWidth","length","maxOffset","useState","currentOffset","setCurrentOffset","className","title","type","onClick","newOffset","moveLeft","disabled","style","width","marginLeft","transition","map","image","index","src","alt","moveRight","App","state","toggleInfinite","setState","prevState","this","margin","display","htmlFor","name","value","onChange","e","Number","target","checked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64984966.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/img-redundant-alt */\nimport React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  imageWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst GAP = 25;\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  imageWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite = false,\n}) => {\n  const containerWidth = (imageWidth + GAP) * frameSize;\n  const totalWidth = (imageWidth + GAP) * images.length;\n  const maxOffset = -(totalWidth - containerWidth);\n\n  const [currentOffset, setCurrentOffset] = useState(0);\n\n  const moveLeft = () => {\n    let newOffset = currentOffset - (imageWidth + GAP) * step;\n\n    if (infinite && newOffset < maxOffset) {\n      newOffset = maxOffset;\n    }\n\n    setCurrentOffset(newOffset);\n  };\n\n  const moveRight = () => {\n    let newOffset = currentOffset + (imageWidth + GAP) * step;\n\n    if (infinite && newOffset > 0) {\n      newOffset = 0;\n    }\n\n    setCurrentOffset(newOffset);\n  };\n\n  return (\n    <div className=\"CarouselWrapper\">\n      <button\n        title=\"prevButton\"\n        type=\"button\"\n        onClick={() => {\n          if (currentOffset > maxOffset) {\n            moveLeft();\n          }\n        }}\n        disabled={currentOffset <= maxOffset}\n      >\n        {' ← '}\n      </button>\n      {/* eslint-disable-next-line react/jsx-indent */}\n      <div className=\"Carousel\" style={{ width: `${containerWidth}px` }}>\n\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${totalWidth}px`,\n            marginLeft: `${currentOffset}px`,\n            transition: `margin-left ${animationDuration / 1000}s ease-in-out`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={`Image ${index + 1}`}\n                style={{ width: `${imageWidth}px` }}\n              />\n            </li>\n          ))}\n        </ul>\n\n      </div>\n      <button\n        data-cy=\"next\"\n        title=\"nextButton\"\n        type=\"button\"\n        onClick={() => {\n          if (currentOffset < 0) {\n            moveRight();\n          }\n        }}\n        disabled={currentOffset >= 0}\n      >\n        {' → '}\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  imageWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    imageWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: true,\n  };\n\n  toggleInfinite = () => {\n    this.setState((prevState: State): State => {\n      return { ...prevState, infinite: !prevState.infinite };\n    });\n  };\n\n  render() {\n    const {\n      images,\n      imageWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n        <form style={{ margin: '20px', display: 'inline-block' }}>\n          <div>\n            <label htmlFor=\"stepId\">\n              Item Width:&nbsp;\n              <input\n                type=\"number\"\n                name=\"stepId\"\n                value={imageWidth}\n                onChange={(e) => this\n                  .setState({ imageWidth: Number(e.target.value) })}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"frameSize\">\n              Frame Size:&nbsp;\n              <input\n                type=\"number\"\n                name=\"frameSize\"\n                value={frameSize}\n                onChange={(e) => this\n                  .setState({ frameSize: Number(e.target.value) })}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"step\">\n              Step:&nbsp;\n              <input\n                type=\"number\"\n                name=\"step\"\n                value={step}\n                onChange={\n                  (e) => this.setState({ step: Number(e.target.value) })\n                }\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"animationDuration\">\n              Animation Duration:&nbsp;\n              <input\n                type=\"number\"\n                name=\"animationDuration\"\n                value={animationDuration}\n                onChange={(e) => this\n                  .setState({ animationDuration: Number(e.target.value) })}\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              Infinite Scroll:\n              <input\n                type=\"checkbox\"\n                checked={this.state.infinite}\n                onChange={this.toggleInfinite}\n              />\n            </label>\n          </div>\n        </form>\n        <Carousel\n          step={step}\n          images={images}\n          frameSize={frameSize}\n          imageWidth={imageWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}