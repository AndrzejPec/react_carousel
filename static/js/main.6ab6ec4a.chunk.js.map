{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","containerWidth","totalWidth","length","maxOffset","useState","currentOffset","setCurrentOffset","className","style","width","marginLeft","transition","map","image","index","src","alt","title","type","onClick","newOffset","moveLeft","disabled","moveRight","App","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQAaaA,EAA4B,SAAC,GAOnC,IANLC,EAMI,EANJA,OAMI,IALJC,iBAKI,MALQ,IAKR,MAJJC,iBAII,MAJQ,EAIR,MAHJC,YAGI,MAHG,EAGH,MAFJC,yBAEI,MAFgB,IAEhB,MADJC,gBACI,SAEEC,GAAkBL,EADZ,IAC+BC,EACrCK,GAAcN,EAFR,IAE2BD,EAAOQ,OACxCC,IAAcF,EAAaD,GAEjC,EAA0CI,mBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAqBA,OAEE,cADA,CACA,OAAKC,UAAU,WAAWC,MAAO,CAAEC,MAAM,GAAD,OAAKT,EAAL,OAAxC,UACE,oBACEO,UAAU,iBACVC,MAAO,CACLC,MAAM,GAAD,OAAKR,EAAL,MACLS,WAAW,GAAD,OAAKL,EAAL,MACVM,WAAW,eAAD,OAAiBb,EAAoB,IAArC,kBALd,SAQGJ,EAAOkB,KAAI,SAACC,EAAOC,GAAR,OACV,6BACE,qBACEC,IAAKF,EACLG,IAAG,gBAAWF,EAAQ,GACtBN,MAAO,CAAEC,MAAM,GAAD,OAAKd,EAAL,UAJTkB,QAUb,wBACEI,MAAM,aACNC,KAAK,SACLC,QAAS,WACHd,EAAgBF,GA9CX,WACf,IAAIiB,EAAYf,GAAiBV,EAPvB,IAO0CE,EAEhDE,GAAYqB,EAAYjB,IAC1BiB,EAAYjB,GAGdG,EAAiBc,GAwCTC,IAGJC,SAAUjB,GAAiBF,EAR7B,SAUG,aAEH,wBACE,UAAQ,OACRc,MAAM,aACNC,KAAK,SACLC,QAAS,WACHd,EAAgB,GAjDV,WAChB,IAAIe,EAAYf,GAAiBV,EAjBvB,IAiB0CE,EAEhDE,GAAYqB,EAAY,IAC1BA,EAAY,GAGdd,EAAiBc,GA2CTG,IAGJD,SAAUjB,GAAiB,EAT7B,SAWG,iBCpFImB,EAAb,4MACEC,MAAQ,CACN/B,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iBAZN,4CAgBE,WACE,IAAQA,EAAWgC,KAAKD,MAAhB/B,OAIR,OAEE,sBAAKa,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCb,EAAOQ,OAA1C,aACA,cAAC,EAAD,CACEL,KAAM,EACNH,OAAQA,EACRE,UAVY,EAWZD,UAZY,IAaZG,kBAAmB,IACnBC,UAAQ,WAhClB,GAAyB4B,IAAMC,WCL/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6ab6ec4a.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite?: boolean;\n}\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  itemWidth = 130,\n  frameSize = 3,\n  step = 3,\n  animationDuration = 1000,\n  infinite = true,\n}) => {\n  const gap = 25;\n  const containerWidth = (itemWidth + gap) * frameSize;\n  const totalWidth = (itemWidth + gap) * images.length;\n  const maxOffset = -(totalWidth - containerWidth);\n\n  const [currentOffset, setCurrentOffset] = useState(0);\n  const moveLeft = () => {\n    let newOffset = currentOffset - (itemWidth + gap) * step;\n\n    if (infinite && newOffset < maxOffset) {\n      newOffset = maxOffset;\n    }\n\n    setCurrentOffset(newOffset);\n  };\n\n  const moveRight = () => {\n    let newOffset = currentOffset + (itemWidth + gap) * step;\n\n    if (infinite && newOffset > 0) {\n      newOffset = 0;\n    }\n\n    setCurrentOffset(newOffset);\n  };\n\n  return (\n    // eslint-disable-next-line react/jsx-indent\n    <div className=\"Carousel\" style={{ width: `${containerWidth}px` }}>\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          width: `${totalWidth}px`,\n          marginLeft: `${currentOffset}px`,\n          transition: `margin-left ${animationDuration / 1000}s ease-in-out`,\n        }}\n      >\n        {images.map((image, index) => (\n          <li key={image}>\n            <img\n              src={image}\n              alt={`Image ${index + 1}`}\n              style={{ width: `${itemWidth}px` }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        title=\"prevButton\"\n        type=\"button\"\n        onClick={() => {\n          if (currentOffset > maxOffset) {\n            moveLeft();\n          }\n        }}\n        disabled={currentOffset <= maxOffset}\n      >\n        {' ← '}\n      </button>\n      <button\n        data-cy=\"next\"\n        title=\"nextButton\"\n        type=\"button\"\n        onClick={() => {\n          if (currentOffset < 0) {\n            moveRight();\n          }\n        }}\n        disabled={currentOffset >= 0}\n      >\n        {' → '}\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n    const itemWidth = 130;\n    const frameSize = 3;\n\n    return (\n\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n        <Carousel\n          step={3}\n          images={images}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={1000}\n          infinite\n        />\n      </div>\n\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}